@model SetUpMapsHere.Models.Driver.DrivingMode
@{
    ViewData["Title"] = "DriverView";
}


<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossorigin="" />
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>
    <style>
        #mapid {
            height: 700px;
        }
    </style>
</head>

<body>
    <form id="form1" runat="server" asp-controller="Map" asp-action="OSM">
    </form>
    <div id="mapid">
    </div>
    <button onclick="getLocation()">Get Geolocation</button>
    <button onclick="random()">Text</button>
    <script>
        	var mymap = L.map('mapid').setView([42.686, 23.319], 13);

            L.tileLayer
            ('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		        maxZoom: 18,
		        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                id: 'mapbox/streets-v11',
                accessToken: 'your.mapbox.access.token'
            }).addTo(mymap);


        var movingmarker = L.marker([42.686, 23.319]).addTo(mymap);
        var i = 0.01
            function looper()
            {
                i = i * (-1);
                movingmarker.setLatLng([42.684, 23.318 + i]).addTo(mymap);
                if (true) {
                    setTimeout(looper, 1000)
                }
            }
        looper();

        var jsonroute = "@Model.Route".replace(/&quot;/g, "\"");
        var routes = JSON.parse(jsonroute);

        var route = L.polyline(routes[0], { color: 'red' }).addTo(mymap)

            function allroutes(json, index, arr)
            {
                L.polyline(json.coordinates, { color: json.ColorHex }).addTo(mymap);
            }


        var StopIcon = L.icon({
            iconUrl: "https://cdn3.iconfinder.com/data/icons/transport-29/100/22-512.png",

            iconSize: [40, 40], // size of the icon
            iconAnchor: [20, 40], // point of the icon which will correspond to marker's location
            popupAnchor: [0, -35]
        });

        var UserIcon = L.icon({
            iconUrl: "https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fmeridianapps.com%2Fimages%2Ficon_bludot%402x.png&f=1&nofb=1",

            iconSize: [40, 40],
            iconAnchor: [20,20]
        })

        var jsonstops = "@Model.Stops".replace(/&quot;/g, "\"");
        var stops = JSON.parse(jsonstops);

            function allstops(stop, index, arr)
            {
                L.marker(stop.Point, { icon: StopIcon }).bindPopup(stop.Address).addTo(mymap);
        }
        stops[0].forEach(allstops);


            var popup = L.popup();
            function onMapClick(e)
            {
                alert(e.latlng)
                popup
                .setLatLng(e.latlng)
                .setContent(e.latlng.toString())
                .openOn(mymap);
            }

            mymap.on('click', onMapClick);
            function getLocation()
            {
                if (navigator.geolocation)
                {
                    navigator.geolocation.getCurrentPosition(showPosition);
                }
            }
            function showPosition(position)
            {
                alert(position.coords.latitude + " " + position.coords.longitude);
                L.marker([position.coords.latitude, position.coords.longitude], { icon: UserIcon }).addTo(mymap);
            }
            function random()
            {
                alert(stops)
                alert(stops[0][0])
                alert(stops.StopAddress)
                alert(stops[0][0].Point)
            }

    </script>
    <h1>@Model.Route</h1>
    <h2>@Model.Stops</h2>
</body>